import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Sistema de Evaluaci√≥n - Tribunal", layout="centered")

# Credenciales (solo presidente puede entrar)
USUARIO_VALIDO = "presidente"
CONTRASE√ëA_VALIDA = "12345"  # Cambia esto por una m√°s segura si lo deseas

# Estado de autenticaci√≥n
if "autenticado" not in st.session_state:
    st.session_state.autenticado = False

# Pantalla de login
if not st.session_state.autenticado:
    st.title("üîê Acceso Restringido")
    st.subheader("Solo para el Presidente del Tribunal")
    usuario = st.text_input("Usuario")
    contrase√±a = st.text_input("Contrase√±a", type="password")

    if st.button("Ingresar"):
        if usuario == USUARIO_VALIDO and contrase√±a == CONTRASE√ëA_VALIDA:
            st.session_state.autenticado = True
            st.rerun()
        else:
            st.error("Usuario o contrase√±a incorrectos.")
else:
    # === Pantalla principal de evaluaci√≥n ===
    st.title("üìã Evaluaci√≥n del Trabajo de Integraci√≥n Curricular")
    st.markdown("### CRITERIOS DE EVALUACI√ìN")

    # Definir criterios: (nombre, peso)
    criterios = [
        ("Calidad y adecuada utilizaci√≥n del material de apoyo audiovisual o gr√°fico presentado", 0.05),
        ("Dominio, comprensi√≥n y seguridad del tema", 0.0),  # Sin peso expl√≠cito ‚Üí asumimos 0.0 (no se califica num√©ricamente)
        ("Precisi√≥n y clara exposici√≥n oral", 0.25),
        ("Centra su intervenci√≥n sobre los aspectos fundamentales del trabajo de integraci√≥n curricular", 0.3),
        ("Exactitud en la interpretaci√≥n de las preguntas del equipo evaluador y seguridad de las respuestas", 0.0),  # Sin peso
        ("¬øLas respuestas son adecuadas y correctas?", 0.0),  # Contiene subcriterios
    ]

    # Subcriterios con pesos
    subcriterios = [
        ("a) Introducci√≥n/Antecedentes, justificaci√≥n y objetivos", 0.1),
        ("b) Metodolog√≠a", 0.1),
        ("c) Resultados, discusi√≥n, conclusiones y recomendaciones", 0.2),
    ]

    calificaciones = {}
    total = 0.0

    # Criterios principales con peso
    st.markdown("#### Criterios generales")
    for nombre, peso in criterios:
        if peso > 0:
            valor = st.slider(
                f"{nombre} (peso: {peso})",
                min_value=0.0,
                max_value=10.0,
                value=5.0,
                step=0.1,
                key=nombre
            )
            ponderado = valor * peso
            calificaciones[nombre] = ponderado
            total += ponderado
            st.write(f"**Puntuaci√≥n ponderada**: {ponderado:.2f}")
            st.divider()

    # Subcriterios
    st.markdown("#### Evaluaci√≥n de respuestas (subcriterios)")
    for nombre, peso in subcriterios:
        valor = st.slider(
            f"{nombre} (peso: {peso})",
            min_value=0.0,
            max_value=10.0,
            value=5.0,
            step=0.1,
            key=nombre
        )
        ponderado = valor * peso
        calificaciones[nombre] = ponderado
        total += ponderado
        st.write(f"**Puntuaci√≥n ponderada**: {ponderado:.2f}")
        st.divider()

    # Mostrar calificaci√≥n total
    st.markdown("### üìä Resultado Final")
    st.metric(label="Calificaci√≥n Total", value=f"{total:.2f}/10.00")

    # Bot√≥n para cerrar sesi√≥n
    if st.button("Cerrar sesi√≥n"):
        st.session_state.autenticado = False
        st.rerun()
